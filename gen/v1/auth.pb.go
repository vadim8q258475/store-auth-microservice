// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: auth.proto

package authpbv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Login struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Login) Reset() {
	*x = Login{}
	mi := &file_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login) ProtoMessage() {}

func (x *Login) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login.ProtoReflect.Descriptor instead.
func (*Login) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{0}
}

type Register struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Register) Reset() {
	*x = Register{}
	mi := &file_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1}
}

type IsTokenValid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsTokenValid) Reset() {
	*x = IsTokenValid{}
	mi := &file_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsTokenValid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsTokenValid) ProtoMessage() {}

func (x *IsTokenValid) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsTokenValid.ProtoReflect.Descriptor instead.
func (*IsTokenValid) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2}
}

type Login_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Login_Request) Reset() {
	*x = Login_Request{}
	mi := &file_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Login_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login_Request) ProtoMessage() {}

func (x *Login_Request) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login_Request.ProtoReflect.Descriptor instead.
func (*Login_Request) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Login_Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Login_Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Login_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Login_Response) Reset() {
	*x = Login_Response{}
	mi := &file_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Login_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login_Response) ProtoMessage() {}

func (x *Login_Response) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login_Response.ProtoReflect.Descriptor instead.
func (*Login_Response) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Login_Response) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Register_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Register_Request) Reset() {
	*x = Register_Request{}
	mi := &file_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Register_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register_Request) ProtoMessage() {}

func (x *Register_Request) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register_Request.ProtoReflect.Descriptor instead.
func (*Register_Request) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Register_Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Register_Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Register_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Register_Response) Reset() {
	*x = Register_Response{}
	mi := &file_auth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Register_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register_Response) ProtoMessage() {}

func (x *Register_Response) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register_Response.ProtoReflect.Descriptor instead.
func (*Register_Response) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Register_Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type IsTokenValid_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsTokenValid_Request) Reset() {
	*x = IsTokenValid_Request{}
	mi := &file_auth_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsTokenValid_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsTokenValid_Request) ProtoMessage() {}

func (x *IsTokenValid_Request) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsTokenValid_Request.ProtoReflect.Descriptor instead.
func (*IsTokenValid_Request) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 0}
}

func (x *IsTokenValid_Request) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type IsTokenValid_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsTokenValid_Response) Reset() {
	*x = IsTokenValid_Response{}
	mi := &file_auth_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsTokenValid_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsTokenValid_Response) ProtoMessage() {}

func (x *IsTokenValid_Response) ProtoReflect() protoreflect.Message {
	mi := &file_auth_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsTokenValid_Response.ProtoReflect.Descriptor instead.
func (*IsTokenValid_Response) Descriptor() ([]byte, []int) {
	return file_auth_proto_rawDescGZIP(), []int{2, 1}
}

func (x *IsTokenValid_Response) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_auth_proto protoreflect.FileDescriptor

const file_auth_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"auth.proto\x12\x04auth\"f\n" +
	"\x05Login\x1a;\n" +
	"\aRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x1a \n" +
	"\bResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"m\n" +
	"\bRegister\x1a;\n" +
	"\aRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x1a$\n" +
	"\bResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"K\n" +
	"\fIsTokenValid\x1a\x1f\n" +
	"\aRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x1a\x1a\n" +
	"\bResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id2\xc7\x01\n" +
	"\vAuthService\x122\n" +
	"\x05Login\x12\x13.auth.Login.Request\x1a\x14.auth.Login.Response\x12;\n" +
	"\bRegister\x12\x16.auth.Register.Request\x1a\x17.auth.Register.Response\x12G\n" +
	"\fIsTokenValid\x12\x1a.auth.IsTokenValid.Request\x1a\x1b.auth.IsTokenValid.ResponseB\fZ\n" +
	".;authpbv1b\x06proto3"

var (
	file_auth_proto_rawDescOnce sync.Once
	file_auth_proto_rawDescData []byte
)

func file_auth_proto_rawDescGZIP() []byte {
	file_auth_proto_rawDescOnce.Do(func() {
		file_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_auth_proto_rawDesc), len(file_auth_proto_rawDesc)))
	})
	return file_auth_proto_rawDescData
}

var file_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_auth_proto_goTypes = []any{
	(*Login)(nil),                 // 0: auth.Login
	(*Register)(nil),              // 1: auth.Register
	(*IsTokenValid)(nil),          // 2: auth.IsTokenValid
	(*Login_Request)(nil),         // 3: auth.Login.Request
	(*Login_Response)(nil),        // 4: auth.Login.Response
	(*Register_Request)(nil),      // 5: auth.Register.Request
	(*Register_Response)(nil),     // 6: auth.Register.Response
	(*IsTokenValid_Request)(nil),  // 7: auth.IsTokenValid.Request
	(*IsTokenValid_Response)(nil), // 8: auth.IsTokenValid.Response
}
var file_auth_proto_depIdxs = []int32{
	3, // 0: auth.AuthService.Login:input_type -> auth.Login.Request
	5, // 1: auth.AuthService.Register:input_type -> auth.Register.Request
	7, // 2: auth.AuthService.IsTokenValid:input_type -> auth.IsTokenValid.Request
	4, // 3: auth.AuthService.Login:output_type -> auth.Login.Response
	6, // 4: auth.AuthService.Register:output_type -> auth.Register.Response
	8, // 5: auth.AuthService.IsTokenValid:output_type -> auth.IsTokenValid.Response
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_auth_proto_init() }
func file_auth_proto_init() {
	if File_auth_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_auth_proto_rawDesc), len(file_auth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_proto_goTypes,
		DependencyIndexes: file_auth_proto_depIdxs,
		MessageInfos:      file_auth_proto_msgTypes,
	}.Build()
	File_auth_proto = out.File
	file_auth_proto_goTypes = nil
	file_auth_proto_depIdxs = nil
}
